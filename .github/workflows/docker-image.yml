name: Docker Image CI

on:
  push:
    branches: [ "patch-1" ]


jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check if pyproject.toml exists
      id: check-file
      run: |
        if [ -f "pyproject.toml" ]; then
          echo "File exists"
        else
          echo "pyproject.toml not found! Exiting"
          exit 1
        fi
          
    - name: Print pyproject.toml content
      run: cat pyproject.toml

    #- name: Extract Python version
     # run: |
      #    PYTHON_VERSION=$(grep -oE '^python\s*=\s*"([0-9]+\.[0-9]+)"' pyproject.toml | grep -oE '[0-9]+\.[0-9]+')
       #   echo "Extracted Python version: $PYTHON_VERSION"

    #- name: Extract only 3.12.4 Python version, though multiple versions specified
     # run: |
      #    PYTHON_VERSION=$(grep -oE '([0-9]+\.[0-9]+\.[0-9]+)' pyproject.toml | grep '^3\.12\.4$')
       #   echo "Extracted Python version: $PYTHON_VERSION"

    - name: Extract all Python versions from pyproject.toml
      run: |
          PYTHON_VERSIONS=$(grep -oE '^python\s*=\s*".*"' pyproject.toml | grep -oE '([0-9]+\.[0-9]+(\.[0-9]+)?)')
          if [ -z "$PYTHON_VERSIONS" ]; then
            echo "Failed to extract Python versions!"
            exit 1
          fi
          echo "Extracted Python versions"
          echo "$PYTHON_VERSIONS"

          # Convert extracted versions to JSON array format
          PYTHON_VERSIONS=$(echo "$PYTHON_VERSIONS" | jq -R -s 'split("\n") | map(select(length > 0))' | jq -c '.')
      
          # Print JSON array
          echo "Converted JSON Array:$PYTHON_VERSIONS"
          echo "PYTHON_VERSIONS=$PYTHON_VERSIONS" >> $GITHUB_ENV

    #- name: Setup python
      #uses: actions/setup-python@v4
      #with:
       # python-version: ${{ env.PYTHON_VERSIONS }}

    - name: Install 
      run: |
          pip install msd_robotframework_xrayconvertor
          

    #- name: Install and Verify Python Versions
     # run: |
      #    sudo apt-get update
       #   sudo apt-get install -y software-properties-common
        #  sudo add-apt-repository -y ppa:deadsnakes/ppa
         # sudo apt-get update
          #for version in $(echo $PYTHON_VERSIONS | jq -r '.[]'); do
           # echo "Installing Python $version..."
            #sudo apt-get update
            #sudo apt-get install -y python$version
            #echo "Verifying Python $version..."
            #python$version --version || echo "Failed to verify Python $version"
          #done

          
    #- name: Debug JSON Output
     # run: echo "Extracted JSON Versions from Environment:${{ env.versions }}"

        
    #- name: Build the Docker image
     # run: docker build . --file Dockerfile --tag app-test:20250129
    #- name: Docker Login
     # uses: docker/login-action@v3.3.0
     # with:
      #  username: mohanreddy072@gmail.com
       # password: Narasimha60@
    #- name: List docker images
     # run: docker images
    #- name: Tag docker image
     # run: docker tag app-test:20250129 mohanreddy072/app-test:20250129
    #- name: Push docker image
     # run: docker push mohanreddy072/app-test:20250129
      
